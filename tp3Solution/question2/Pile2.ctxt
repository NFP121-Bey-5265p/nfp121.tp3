#BlueJ class context
comment0.target=Pile2
comment1.params=taille
comment1.target=Pile2(int)
comment1.text=\r\n\ Creation\ d'une\ pile.\r\n\ \r\n\ @param\ taille\r\n\ \ \ \ \ \ \ \ \ \ \ \ la\ taille\ de\ la\ pile,\ la\ taille\ doit\ etre\ >\ 0\r\n
comment10.params=object
comment10.target=boolean\ equals(java.lang.Object)
comment11.params=
comment11.target=int\ hashCode()
comment12.params=
comment12.target=int\ taille()
comment12.text=\r\n\ Retourne\ le\ nombre\ d'element\ d'une\ pile.\r\n\ \r\n\ @return\ le\ nombre\ d'element\r\n
comment13.params=
comment13.target=int\ capacite()
comment13.text=\r\n\ Retourne\ la\ capacite\ de\ cette\ pile.\r\n\ \r\n\ @return\ le\ nombre\ d'element\r\n
comment2.params=
comment2.target=Pile2()
comment3.params=o
comment3.target=void\ empiler(java.lang.Object)
comment4.params=
comment4.target=java.lang.Object\ depiler()
comment5.params=
comment5.target=java.lang.Object\ sommet()
comment6.params=
comment6.target=boolean\ estVide()
comment6.text=\r\n\ Effectue\ un\ test\ de\ l'etat\ de\ la\ pile.\r\n\ \r\n\ @return\ vrai\ si\ la\ pile\ est\ vide,\ faux\ autrement\r\n
comment7.params=
comment7.target=boolean\ estPleine()
comment7.text=\r\n\ Effectue\ un\ test\ de\ l'etat\ de\ la\ pile.\r\n\ \r\n\ @return\ vrai\ si\ la\ pile\ est\ pleine,\ faux\ autrement\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Retourne\ une\ representation\ en\ String\ d'une\ pile,\ contenant\ la\r\n\ representation\ en\ String\ de\ chaque\ element.\r\n\ \r\n\ @return\ une\ representation\ en\ String\ d'une\ pile\r\n
comment9.params=p1\ p2
comment9.target=void\ remplirPile(PileI,\ PileI)
comment9.text=\ first\ trial\ that\ didn't\ work\ in\ question2-5\ while\ comparing\r\n\ PileI\ to\ Pile\ and\ Pile2\ and\ Pile3\r\n\ public\ boolean\ equals(Object\ o)\ {\r\n\ \ \ \ \ if\ (this\ \=\=\ o)\ return\ true;\r\n\ \ \ \ \ if\ (o\ \=\=\ null)\ return\ false;\r\n\ \ \ \ \ if\ (\!(o\ instanceof\ Pile2))\ return\ false;\r\n\ \ \ \ \ Pile2\ pile\=\ (Pile2)o;\r\n\ \ \ \ \ if\ (stk.size()\ \!\=\ pile.stk.size()){return\ false;}\r\n\ \ \ \ \ if\ (capacite\ \!\=\ pile.capacite){return\ false;}\r\n\ \ \ \r\n\ \ \ \ \ for\ (int\ i\=0;i<stk.size()-1;i++){\r\n\ \ \ \ \ \ \ \ \ if\ (\ stk.get(i)\!\=pile.stk.get(i)\ )return\ false;\r\n\ \ \ \ \ \ \ \ \ }\ \r\n\ \ \ \ \ \r\n\ \ \ \ return\ true;\r\n}
numComments=14
